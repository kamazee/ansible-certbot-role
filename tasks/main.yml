---
- name: Make sure desination dir for symlinks exist
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    mode: 0700
  with_items:
    - "{{ certbot_key_link_dest | dirname }}"
    - "{{ certbot_cert_link_dest | dirname }}"

- name: Check if a certificate link exists
  become: yes
  stat:
    path: "{{ certbot_cert_link_dest }}"
  register: certbot_cert_link_status

- name: Install certbot
  become: yes
  apt:
    pkg: certbot
    state: "{{ apt_state_default | default('present') }}"
    update_cache: yes
    cache_valid_time: "{{ apt_cache_valid_time | default(86400) }}"
  when: certbot_issue_real_cert

- name: Register Letsencrypt account
  become: yes
  command:
    argv:
      - "{{ certbot_command }}"
      - "--non-interactive"
      - register
      - "--agree-tos"
      - "-m"
      - "{{ certbot_letsencrypt_email }}"
      - "--no-eff-email"
    creates: "/etc/letsencrypt/accounts/*/directory/*/private_key.json"
  when: certbot_issue_real_cert

- name: Check if there is a real certificate
  become: yes
  stat:
    path: "{{ certbot_cert_file }}"
  register: certbot_cert_file_status

- name: Link stub sertificates
  include_tasks:
    file: stubs.yml
    apply:
      tags:
        - https

# This is required to make nginx expose the host to pass ACME http challenge
- name: Flush listeners
  meta: flush_handlers

- name: Issue a real certificate
  become: yes
  command:
    argv:
      - "{{ certbot_command }}"
      - "--non-interactive"
      - certonly
      - "--cert-name"
      - "{{ certbot_cert_name }}"
      - "--domains"
      - "{{ certbot_domains | join(',') }}"
      - "--agree-tos"
      - "--manual-public-ip-logging-ok"
      - "--preferred-challenges"
      - "http-01"
      - "--webroot"
      - "--webroot-path"
      - "{{ certbot_acme_http_challenge_root }}"
      - "--deploy-hook"
      - "{{ certbot_deploy_hook }}"
  when: not certbot_cert_file_status.stat.exists and certbot_issue_real_cert
